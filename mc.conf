#############################################################
## Name          : mc.conf
## Version       : 1.0
## Date          : 2012-09-15
## Author        : LHammonds
## Purpose       : Common variables and functions for various scripts.
## Compatibility : Ubuntu Server 12.04 - 20.04 LTS
######################## CHANGE LOG #########################
## DATE       VER WHO WHAT WAS CHANGED
## ---------- --- --- ---------------------------------------
## 2012-09-15 1.0 LTH Created script.
#############################################################

#######################################
##            FUNCTIONS              ##
#######################################

MCRootDir="/opt/spigot"
RebootFile="/tmp/mc-reboot-flag.txt"

function f_sendmsg()
{
  ## Purpose: Send messages to Minecraft players via the console.
  ## Parameter #1 is the screen session name, userid and foldername.
  ## Parameter #2 is the message to send to the console.
  Owner=$1
  Message=$2
  CurrentUser=`whoami`
  ## Make sure the required parameter is not empty.
  if [[ -z "${Message}" ]]; then
    ## No command given.  Send error message instead.
    echo "`date +%Y-%m-%d_%H:%M:%S` [SEVERE] Script tried to send an empty message." | tee -a ${LogFile}
    if [ "${CurrentUser}" != "${Owner}" ]; then
      ## Need to switch to the owner account to run the screen command.
      su ${Owner} --command "screen -S ${Owner} -p ${Owner} -X stuff \"say [SEVERE] Restore script tried to send an empty message.\""
      ## Send carriage return.
      su ${Owner} --command "screen -S ${Owner} -p ${Owner} -X eval \"stuff \015\""
    else
      ## This script is being run by the owner account.
      screen -S ${Owner} -p ${Owner} -X stuff "say [SEVERE] Restore script tried to send an empty message."
      ## Send carriage return.
      screen -S ${Owner} -p ${Owner} -X eval "stuff \015"
    fi
  else
    ## Send command to the console.
    if [ "${CurrentUser}" != "${Owner}" ]; then
      ## Need to switch to the owner account to run the screen command.
      su ${Owner} --command "screen -S ${Owner} -p ${Owner} -X stuff \"${Message}\""
      ## Send carriage return.
      su ${Owner} --command "screen -S ${Owner} -p ${Owner} -X eval \"stuff \015\""
    else
      ## This script is being run by the owner account.
      screen -S ${Owner} -p ${Owner} -X stuff "${Message}"
      ## Send carriage return.
      screen -S ${Owner} -p ${Owner} -X eval "stuff \015"
    fi
  fi
}   ## f_sendmsg()

function f_isrunning()
{
  ## Purpose: Check if server is running and return the answer via parameter #1.
  ## Parameter #1 is the screen session name.
  SessionName=$1
  local isrunning=0

  ## This performs a double-check to see if Minecraft is running.
  Active=`pidof java`
  if [ -z ${Active} ]; then
    ## Server is not running.
    isrunning=0
  else
    ## Server is still running.
    isrunning=1
  fi
  SessionCheck=`screen -list|grep ${SessionName}|wc -l`
  if [ "${SessionCheck}" -gt "0" ]; then
    ## Server is still running.
    isrunning=1
  fi
  return ${isrunning}
}   ## f_isrunning()
